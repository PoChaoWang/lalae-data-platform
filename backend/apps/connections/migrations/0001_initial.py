# Generated by Django 5.2.1 on 2025-06-18 04:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("clients", "0001_initial"),
        ("socialaccount", "0006_alter_socialaccount_extra_data"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DataSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("GOOGLE_ADS", "Google Ads"),
                            ("FACEBOOK_ADS", "Facebook Ads"),
                            ("GOOGLE_SHEET", "Google Sheet"),
                            ("CSV", "CSV File"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(default="Default Name", max_length=255),
                ),
                ("oauth_required", models.BooleanField(default=True)),
                ("required_scopes", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Connection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("display_name", models.CharField(max_length=200)),
                ("target_dataset_id", models.CharField(max_length=200)),
                ("config", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACTIVE", "Active"),
                            ("SYNCING", "Syncing"),
                            ("ERROR", "Error"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        default=True, help_text="控制此連線的排程是否啟用 (On/Off)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clients.client",
                    ),
                ),
                (
                    "social_account",
                    models.ForeignKey(
                        blank=True,
                        help_text="Only set if the data source requires OAuth authentication.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="socialaccount.socialaccount",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="connections.datasource",
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "data_source", "display_name")},
            },
        ),
        migrations.CreateModel(
            name="ConnectionExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "trigger_method",
                    models.CharField(
                        choices=[("SYSTEM", "System"), ("MANUAL", "Manual")],
                        default="SYSTEM",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("RUNNING", "Running"),
                            ("SUCCESS", "Success"),
                            ("FAILED", "Failed"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, help_text="Result message", null=True),
                ),
                (
                    "record_count",
                    models.IntegerField(
                        blank=True, help_text="Sync record count", null=True
                    ),
                ),
                (
                    "config_snapshot",
                    models.JSONField(
                        help_text="Connection config at the time of execution"
                    ),
                ),
                (
                    "display_name_snapshot",
                    models.CharField(
                        help_text="Display name at the time of execution",
                        max_length=200,
                    ),
                ),
                (
                    "target_dataset_id_snapshot",
                    models.CharField(
                        help_text="Target dataset ID at the time of execution",
                        max_length=200,
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Task start time"
                    ),
                ),
                (
                    "finished_at",
                    models.DateTimeField(
                        blank=True, help_text="Task finish time", null=True
                    ),
                ),
                (
                    "connection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="connections.connection",
                    ),
                ),
                (
                    "triggered_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="If the task was triggered by a user",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Connection Execution",
                "verbose_name_plural": "Connection Executions",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="GoogleAdsField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "field_name",
                    models.CharField(
                        help_text="Full API field name, e.g. 'metrics.clicks'",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="UI display name, e.g. 'Clicks'", max_length=255
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("ATTRIBUTE", "Attribute"),
                            ("METRIC", "Metric"),
                            ("SEGMENT", "Segment"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "group",
                    models.CharField(
                        blank=True,
                        help_text="User-friendly group name",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("data_type", models.CharField(max_length=50)),
                ("is_selectable", models.BooleanField(default=False)),
                (
                    "compatible_fields",
                    models.ManyToManyField(
                        blank=True, related_name="+", to="connections.googleadsfield"
                    ),
                ),
            ],
            options={
                "verbose_name": "Google Ads Field",
                "verbose_name_plural": "Google Ads Fields",
                "ordering": ["category", "display_name"],
            },
        ),
    ]
