"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from django.core.exceptions import ImproperlyConfigured
import environ
from celery.schedules import crontab

# Initialize environ
env = environ.Env(
    DEBUG=(bool, False),
    GOOGLE_CLOUD_PROJECT_ID=(str, ""),
    SUPABASE_DATABASE_PASSWORD=(str, ""),
    EMAIL_HOST_USER=(str, ""),
    EMAIL_HOST_PASSWORD=(str, ""),
    GOOGLE_ADS_DEVELOPER_TOKEN=(str, ""), 
    FACEBOOK_APP_ID=(str, ""), 
    FACEBOOK_APP_SECRET=(str, ""), 
    REDIS_URL=(str, "redis://localhost:6379"),
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


TIME_ZONE = "Asia/Taipei"
# Take environment variables from .env file
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# Get environment variables
GOOGLE_CLOUD_PROJECT_ID = env("GOOGLE_CLOUD_PROJECT_ID")
# GOOGLE_APPLICATION_CREDENTIALS = os.getenv("GOOGLE_APPLICATION_CREDENTIALS")

GOOGLE_ADS_DEVELOPER_TOKEN = env("GOOGLE_ADS_DEVELOPER_TOKEN")

FACEBOOK_APP_ID = env("FACEBOOK_APP_ID")
FACEBOOK_APP_SECRET = env("FACEBOOK_APP_SECRET")
REDIS_URL = env("REDIS_URL")


REDIS_CACHE_URL = f"{REDIS_URL}/1"
REDIS_CELERY_URL = f"{REDIS_URL}/0?ssl_cert_reqs=CERT_NONE"

# FRONTEND_BASE_URL = "https://lalae-data-platform-94u9eps4l-pochaowangs-projects.vercel.app"
FRONTEND_BASE_URL = "http://localhost:3000"

# FRONTEND_BASE_URL = [
#     r"^https://lalae-data-platform-.*\.vercel\.app$",
# ]

if not GOOGLE_CLOUD_PROJECT_ID:
    raise ImproperlyConfigured(
        "GOOGLE_CLOUD_PROJECT_ID environment variable is not set"
    )

# if not GOOGLE_APPLICATION_CREDENTIALS:
#     raise ImproperlyConfigured(
#         "GOOGLE_APPLICATION_CREDENTIALS environment variable is not set"
#     )

# Set the environment variable for Google Cloud credentials
# os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = GOOGLE_APPLICATION_CREDENTIALS

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env(
    "SECRET_KEY",
    default="django-insecure-b2pnu3t5lap#rt)fq2e3m)sa^n)h%7^b*c^n4bn5mcw8!858=3",
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG", default=True)

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'lalae-web-302883063343.asia-east1.run.app',
]

# Application definition

INSTALLED_APPS = [
    # Django apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Custom Django apps
    "django_celery_results",
    "django_celery_beat",
    "django.contrib.sites",
    # Rest Framework
    "rest_framework",
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    # Rest auth
    'dj_rest_auth',
    'dj_rest_auth.registration',
    # Allauth apps
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    'allauth.socialaccount.providers.facebook',
    # Apps
    "apps.users",
    "apps.clients",
    "apps.dashboard",
    "apps.queries",
    "apps.connections",

    "corsheaders"
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = "main.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # "DIRS": [
        #     os.path.join(BASE_DIR, "templates"),
        #     os.path.join(BASE_DIR, "apps/templates"),
        # ],
        'DIRS': [BASE_DIR / 'backend' / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "main.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "postgres",
        "USER": "postgres.wprsvlusgasymujtdxgk",
        "PASSWORD": env("SUPABASE_DATABASE_PASSWORD"),
        "HOST": "aws-0-ap-southeast-1.pooler.supabase.com",
        "PORT": "5432",
        'ATOMIC_REQUESTS': True,
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# LOGIN_REDIRECT_URL = "/dashboard/"
LOGIN_REDIRECT_URL = FRONTEND_BASE_URL
LOGOUT_REDIRECT_URL = "/"
# LOGIN_URL = "/users/login/"
LOGIN_URL = '/accounts/login/'



# Password Reset Timeout (in seconds)
PASSWORD_RESET_TIMEOUT = 259200  # 3 days

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_CACHE_URL, # 建議使用不同的資料庫編號
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {
                "max_connections": 20,  # Upstash 有連接限制，建議降低
                "retry_on_timeout": True,
                "socket_connect_timeout": 5,
                "socket_timeout": 5,
                "health_check_interval": 30,
            },
            "IGNORE_EXCEPTIONS": True,
            "SSL_CERT_REQS": None,
        },
        "KEY_PREFIX": "django_api_cache", # 可選：為您的快取鍵添加前綴
        "TIMEOUT": 60 * 60 # 預設快取有效期，例如 1 小時
    }
}

# Celery Configuration
# CELERY_BROKER_URL = "redis://localhost:6379/0"
# CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
CELERY_BROKER_URL = REDIS_CELERY_URL
CELERY_RESULT_BACKEND = REDIS_CELERY_URL

CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = TIME_ZONE

CELERY_BROKER_TRANSPORT = "redis"
CELERY_BROKER_TRANSPORT_OPTIONS = {
    "visibility_timeout": 3600,
    "polling_interval": 1,
}

CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'


# CELERY_BEAT_SCHEDULE = {
#     'schedule-periodic-syncs': {
#         'task': 'apps.connections.tasks.schedule_periodic_syncs_task',
#         'schedule': crontab(minute='*'),  # 每分鐘執行一次
#     },
# }


SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]


# Provider specific settings
SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": [
            "profile",
            "email",
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/bigquery",
            "https://www.googleapis.com/auth/bigquery.insertdata",
            "https://www.googleapis.com/auth/bigquery.readonly",
            "https://www.googleapis.com/auth/adwords",
        ],
        "AUTH_PARAMS": {
            "access_type": "offline",
            "prompt": "consent",
        },
    }
}

# Signup Email Setting
ACCOUNT_EMAIL_CONFIRMATION_HMAC = False
# Email Configuration
# EMAIL_BACKEND = "django.core.mail.backends.dummy.EmailBackend"
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"  # For production
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = "dark781228@gmail.com"
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'

ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = f'{FRONTEND_BASE_URL}/email-confirmed'
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = f'{FRONTEND_BASE_URL}/email-confirmed'

ACCOUNT_ADAPTER = 'apps.users.adapters.CustomAccountAdapter'
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_SIGNUP_FIELDS = ['email*']
ACCOUNT_USER_MODEL_USERNAME_FIELD = 'username'
ACCOUNT_LOGIN_METHODS = ['email']
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = False
ACCOUNT_LOGOUT_ON_GET = True
SOCIALACCOUNT_EMAIL_VERIFICATION = "none"
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_STORE_TOKENS = True
SOCIALACCOUNT_ADAPTER = "allauth.socialaccount.adapter.DefaultSocialAccountAdapter"
SOCIALACCOUNT_LOGIN_ON_GET = True
SOCIALACCOUNT_CALLBACK_TEMPLATE = "connections/account/socialaccount_callback.html"
ACCOUNT_USERNAME_REQUIRED = True

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'PAGE_SIZE': 10,
}

REST_AUTH = {
    'USE_JWT': True,
    'JWT_AUTH_COOKIE': 'jwt-auth',
    'JWT_AUTH_REFRESH_COOKIE': 'jwt-refresh-token',
    'JWT_AUTH_HTTPONLY': False,
    'USER_DETAILS_SERIALIZER': 'apps.users.serializers.UserSerializer',
    'REGISTER_SERIALIZER': 'apps.users.serializers.CustomRegisterSerializer',
}

from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    # 'ACCESS_TOKEN_LIFETIME': timedelta(seconds=20), 
    # 'REFRESH_TOKEN_LIFETIME': timedelta(minutes=2),
    'ROTATE_REFRESH_TOKENS': True,
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "[{levelname}] {asctime} {module}: {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "verbose", 
        },
    },
    
    "root": {
        "handlers": ["console"],
        "level": "INFO",  
    },
    "loggers": {
        "allauth": {
            "handlers": ["console"],
            "level": "DEBUG",
            "propagate": False, 
        },
        "apps": {
            "handlers": ["console"],
            "level": "DEBUG", 
            "propagate": False,
        },
        'celery': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}


FACEBOOK_APP_ID = env("FACEBOOK_APP_ID")
FACEBOOK_APP_SECRET = env("FACEBOOK_APP_SECRET")
FACEBOOK_ACCESS_TOKEN = env('FACEBOOK_ACCESS_TOKEN')
# FACEBOOK_DEVELOPER_ACCESS_TOKEN = env('FACEBOOK_DEVELOPER_ACCESS_TOKEN')
FACEBOOK_AD_ACCOUNT_ID = env('FACEBOOK_AD_ACCOUNT_ID')

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True


CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:3000",
    "http://localhost:3000",
]

CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^https://lalae-data-platform-.*\.vercel\.app$",
]

CORS_ALLOW_CREDENTIALS = True

# 為了讓 Next.js (localhost:3000) 能收到並回傳 Django (localhost:8000) 的 cookie，
# 在開發時，我們需要放寬 SameSite 設定。
# 注意：在正式上線環境 (production) 且使用不同網域時，需要更嚴謹的設定。
SESSION_COOKIE_SAMESITE = 'None'
# CSRF_COOKIE_SAMESITE = 'None'

# CSRF_TRUSTED_ORIGINS = [
#     'https://30e1-114-24-81-73.ngrok-free.app',
#     "http://127.0.0.1:3000",
#     "https://30e1-114-24-81-73.ngrok-free.app",
# ]

SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True


