# Generated by Django 5.2.1 on 2025-06-21 11:07

import apps.queries.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QueryDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Query Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('sql_query', models.TextField(verbose_name='SQL Query')),
                ('bigquery_project_id', models.CharField(help_text='GCP Project ID', max_length=100)),
                ('bigquery_dataset_id', models.CharField(help_text='Target BigQuery dataset ID', max_length=100)),
                ('schedule_type', models.CharField(choices=[('ONCE', 'Once'), ('PERIODIC', 'Periodic')], default='ONCE', max_length=10)),
                ('cron_schedule', models.CharField(blank=True, help_text="Cron schedule string (e.g., '0 9 * * *' for daily 9 AM)", max_length=255, null=True)),
                ('output_target', models.CharField(choices=[('NONE', 'None'), ('Google Sheets', 'Google Sheets'), ('Google Looker Studio', 'Google Looker Studio')], default='NONE', max_length=50)),
                ('output_config', models.JSONField(blank=True, help_text='JSON configuration for output target (e.g., sheet_id, tab_name, append_mode)', null=True)),
                ('last_run_status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('SCHEDULED', 'Scheduled'), ('OUTPUT_ERROR', 'Output Error'), ('SAVED_ONLY', 'Saved Only')], default='PENDING', max_length=20, verbose_name='Last Run Status')),
                ('last_run_initiated_at', models.DateTimeField(blank=True, null=True)),
                ('last_successful_test_hash', models.CharField(blank=True, help_text='SHA256 hash of the last successfully tested SQL query', max_length=64, null=True)),
                ('last_tested_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Query Definition',
                'verbose_name_plural': 'Query Definitions',
            },
        ),
        migrations.CreateModel(
            name='QueryExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('triggered_by', models.CharField(default='MANUAL', max_length=20, verbose_name='Triggered By')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=10, verbose_name='Status')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('result_message', models.TextField(blank=True, null=True, verbose_name='Result Message/Error Message')),
                ('result_rows_count', models.IntegerField(blank=True, null=True, verbose_name='Result Rows Count')),
                ('result_storage_path', models.CharField(blank=True, max_length=500, null=True, verbose_name='Result Storage Path (e.g., GCS)')),
                ('result_output_link', models.URLField(blank=True, null=True, verbose_name='Result Output Link')),
                ('query_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='queries.querydefinition', verbose_name='Query Definition')),
            ],
            options={
                'verbose_name': 'Query Execution Record',
                'verbose_name_plural': 'Query Execution Records',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='QueryRunResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('executed_at', models.DateTimeField(auto_now_add=True, verbose_name='Executed At')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('SCHEDULED', 'Scheduled'), ('OUTPUT_ERROR', 'Output Error'), ('SAVED_ONLY', 'Saved Only')], default='PENDING', max_length=20, verbose_name='Status')),
                ('result_data_csv', models.TextField(blank=True, null=True, verbose_name='Result Data (CSV)')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Error Message')),
                ('expires_at', models.DateTimeField(default=apps.queries.models.get_default_expires_at, verbose_name='Expires At')),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='run_results', to='queries.querydefinition', verbose_name='Query')),
            ],
            options={
                'verbose_name': 'Query Run Result',
                'verbose_name_plural': 'Query Run Results',
                'ordering': ['-executed_at'],
            },
        ),
        migrations.AddField(
            model_name='querydefinition',
            name='last_successful_run_result',
            field=models.ForeignKey(blank=True, help_text='Link to the last successful run result', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='queries.queryrunresult'),
        ),
    ]
